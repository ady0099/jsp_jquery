/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-25 00:39:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex27_005fpopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body{\r\n");
      out.write("		background-color: lightyellow;\r\n");
      out.write("	}\r\n");
      out.write("	#movie{\r\n");
      out.write("		position: absolute;\r\n");
      out.write("	}\r\n");
      out.write("	#movie2{\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		left: 450px;\r\n");
      out.write("	}\r\n");
      out.write("	#close{\r\n");
      out.write("		padding: 30px;\r\n");
      out.write("		text-align: right;\r\n");
      out.write("	}\r\n");
      out.write("	#close2{\r\n");
      out.write("		padding: 30px;\r\n");
      out.write("		text-align: right;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	var hideGuide1 = getCookie('hideGuide1');\r\n");
      out.write("	if (hideGuide1) {\r\n");
      out.write("		$(\"#movie\").hide();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	var hideGuide2 = getCookie('hideGuide2');\r\n");
      out.write("	if (hideGuide2) {\r\n");
      out.write("		$(\"#movie2\").hide();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	$(\"#close1\").on(\"click\", function(){\r\n");
      out.write("		$(\"#movie\").hide();\r\n");
      out.write("		if ($(\".todaynot1\").prop(\"checked\")) {\r\n");
      out.write("			setCookie('hideGuide1', 'true', 1); // 1일 동안 쿠키 유지\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	$(\"#close2\").on(\"click\", function(){\r\n");
      out.write("		$(\"#movie2\").hide();\r\n");
      out.write("		if ($(\".todaynot2\").prop(\"checked\")) {\r\n");
      out.write("			setCookie('hideGuide2', 'true', 1); // 1일 동안 쿠키 유지\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function setCookie(name, value, days) {\r\n");
      out.write("		var expires = \"\";\r\n");
      out.write("		if (days) {\r\n");
      out.write("			var date = new Date();\r\n");
      out.write("			date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n");
      out.write("			expires = \"; expires=\" + date.toUTCString();\r\n");
      out.write("		}\r\n");
      out.write("		document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function getCookie(name) {\r\n");
      out.write("		var nameEQ = name + \"=\";\r\n");
      out.write("		var ca = document.cookie.split(';');\r\n");
      out.write("		for (var i = 0; i < ca.length; i++) {\r\n");
      out.write("			var c = ca[i];\r\n");
      out.write("			while (c.charAt(0) === ' ') c = c.substring(1, c.length);\r\n");
      out.write("			if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n");
      out.write("		}\r\n");
      out.write("		return null;\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"movie\">\r\n");
      out.write("		<img alt=\"\" src=\"../images/workplace.jpg\">\r\n");
      out.write("		<div style=\"background-color: skyblue\">\r\n");
      out.write("		<input type=\"checkbox\" class=\"todaynot1\"><span>오늘그만보기</span>\r\n");
      out.write("		<span id=\"close1\">닫기</span></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"movie2\">\r\n");
      out.write("		<img alt=\"\" src=\"../images/tree-1.jpg\">\r\n");
      out.write("		<div  style=\"background-color: tomato\">\r\n");
      out.write("		<input type=\"checkbox\" class=\"todaynot2\"><span>오늘그만보기</span>\r\n");
      out.write("		<span id=\"close2\">닫기</span></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h2>ICT 사진관</h2>\r\n");
      out.write("		<div>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("			<p>사진관 오시는 길</p>\r\n");
      out.write("			<p>2호선 신촌역</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
